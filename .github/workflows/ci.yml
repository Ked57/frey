name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type check
      run: npm run type-check
      
    - name: Run linting
      run: npm run format
      
    - name: Run tests
      run: npm run test:run
      
    - name: Run security audit
      run: npm run audit
      
    - name: Build project
      run: npm run build:dist

  sync-to-beta:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GH_TOKEN }}
        
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Debug branch info
      run: |
        echo "Current ref: ${{ github.ref }}"
        echo "Current branch: $(git branch --show-current)"
        echo "Remote branches:"
        git branch -r
        
    - name: Sync master to beta branch
      run: |
        # Fetch all branches
        git fetch origin
        
        # Always checkout beta branch (it should exist now)
        git checkout -B beta origin/beta
        
        # Check if beta is already up to date with master
        if git merge-base --is-ancestor master beta; then
          echo "Beta is already up to date with master"
          # Create an empty commit to trigger beta-release workflow
          git commit --allow-empty -m "chore: trigger beta release"
        else
          echo "Rebasing beta onto master..."
          # Rebase beta onto master (cleaner history)
          git rebase master
        fi
        
        # Push beta branch (force push needed for rebase)
        # Beta branch is only managed by CI, so safe to force push
        git push origin beta --force
        
        echo "Successfully synced master to beta branch with rebase"

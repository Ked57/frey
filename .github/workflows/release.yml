name: Manual Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GH_TOKEN }}
        
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build:dist
      
    - name: Verify tag exists
      run: |
        if ! git rev-parse "${{ github.event.inputs.tag }}" >/dev/null 2>&1; then
          echo "Error: Tag ${{ github.event.inputs.tag }} does not exist"
          exit 1
        fi
        echo "Tag ${{ github.event.inputs.tag }} found"
        
    - name: Checkout specific tag
      run: |
        git checkout ${{ github.event.inputs.tag }}
        
    - name: Update package.json version
      run: |
        # Extract version from tag (remove 'v' prefix if present)
        VERSION="${{ github.event.inputs.tag }}"
        VERSION=${VERSION#v}
        
        # Update package.json version
        npm version $VERSION --no-git-tag-version
        
        echo "Updated package.json to version $VERSION"
        
    - name: Generate changelog
      run: |
        # Create a basic changelog entry if CHANGELOG.md doesn't exist or is empty
        if [ ! -f CHANGELOG.md ] || [ ! -s CHANGELOG.md ]; then
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
        fi
        
        VERSION="${{ github.event.inputs.tag }}"
        VERSION=${VERSION#v}
        
        # Add new version entry to changelog
        TEMP_FILE=$(mktemp)
        echo "# Changelog" > "$TEMP_FILE"
        echo "" >> "$TEMP_FILE"
        echo "## [$VERSION] - $(date +%Y-%m-%d)" >> "$TEMP_FILE"
        echo "" >> "$TEMP_FILE"
        echo "### Release" >> "$TEMP_FILE"
        echo "- Manual release of version $VERSION" >> "$TEMP_FILE"
        echo "" >> "$TEMP_FILE"
        
        # Append existing changelog content (skip first line if it's just "# Changelog")
        if [ -f CHANGELOG.md ]; then
          tail -n +3 CHANGELOG.md >> "$TEMP_FILE" 2>/dev/null || true
        fi
        
        mv "$TEMP_FILE" CHANGELOG.md
        
    - name: Commit changes
      run: |
        git add package.json package-lock.json CHANGELOG.md
        git commit -m "chore(release): ${{ github.event.inputs.tag }} [skip ci]"
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag }}
        release_name: Release ${{ github.event.inputs.tag }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ github.event.inputs.prerelease }}
        
    - name: Publish to NPM
      run: |
        # Extract version from tag
        VERSION="${{ github.event.inputs.tag }}"
        VERSION=${VERSION#v}
        
        # Publish to npm
        npm publish --access public
        
    - name: Push changes
      run: |
        git push origin ${{ github.event.inputs.tag }}
        git push origin master
